/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import static swing.windows.f;
import java.sql.*;
import medecin.metier.Prescription;
import medecin.metier.Medecin;
import medecin.metier.Patient;
import classe.DAO.PrescriptionDAO;
import classe.DAO.MedecinDAO;
import classe.DAO.PatientDAO;
import javax.swing.JOptionPane;
import myconnections.DBConnection;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;

/**
 *
 * @author jerom
 */
public class Modifpres extends javax.swing.JPanel {

    /**
     * Creates new form Modifpres
     */
    String datepres,nompat,nommed;
    Statement stmt;
    ResultSet rs = null;
    int id,idmed,idpat,count;
    Prescription pres;
    PrescriptionDAO pdao = new PrescriptionDAO();
    static Locale locale = Locale.getDefault();
	static java.util.Date actuelle = new java.util.Date();
 
	//	* Definition du format utilise pour les dates
	static DateFormat dateFormat =
                 new SimpleDateFormat("dd/MM/YY");
 
	//	* Donne la date au format "aaaa-mm-jj"
	public static String date()
	{
		String dat = dateFormat.format(actuelle);
		return dat;
	}
    public Modifpres() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        IDRech = new javax.swing.JTextField();
        btRech = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtMed = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        txtPat = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDate = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCount = new javax.swing.JLabel();
        btValider = new javax.swing.JButton();
        btAnnuler = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 102));
        setLayout(new java.awt.GridLayout(7, 2, 10, 15));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel1.setText("Entrez l'ID :");
        add(jLabel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Modification prescription");
        add(jLabel2);

        IDRech.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        IDRech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDRechActionPerformed(evt);
            }
        });
        add(IDRech);

        btRech.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btRech.setText("Rechercher");
        btRech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRechActionPerformed(evt);
            }
        });
        add(btRech);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Rédigée par le Docteur : ");
        add(jLabel3);

        txtMed.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtMed);

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel66.setText("Pour le patient :");
        add(jLabel66);

        txtPat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtPat);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("En date du :");
        add(jLabel5);

        txtDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtDate);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Nombre de médicaments :");
        add(jLabel7);

        txtCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtCount);

        btValider.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btValider.setText("Valider");
        btValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValiderActionPerformed(evt);
            }
        });
        add(btValider);

        btAnnuler.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btAnnuler.setText("Annuler");
        btAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnnulerActionPerformed(evt);
            }
        });
        add(btAnnuler);
    }// </editor-fold>//GEN-END:initComponents

    private void IDRechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDRechActionPerformed
        
    }//GEN-LAST:event_IDRechActionPerformed

    private void btRechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRechActionPerformed
        try{
            Connection dbConnect = DBConnection.getConnection();
            String ids=IDRech.getText();
            id=Integer.parseInt(ids);
            System.out.println(id);
                stmt = dbConnect.createStatement();
                rs = stmt.executeQuery("select * from prescription");
                while(rs.next()){
                    if(rs.getInt("IDPRES")==(id)){
                        datepres=rs.getString("DATEPRES");
                        idmed=rs.getInt("IDMED");
                        idpat=rs.getInt("IDPAT");
                    }                
                }
            txtDate.setText(datepres);
                stmt = dbConnect.createStatement();
                rs = stmt.executeQuery("select * from patient");
                while(rs.next()){
                    if(rs.getInt("IDPAT")==(idpat)){
                        nompat=rs.getString("NOM");
                    }
                }
            txtPat.setText(nompat);
                stmt = dbConnect.createStatement();
               rs = stmt.executeQuery("select * from medecin");
               while(rs.next()){
                   if(rs.getInt("IDMED")==(idmed)){
                       nommed=rs.getString("NOM");
                   }
               }
            txtMed.setText(nommed);
            String req = "Select count(*) AS COUNT from infos where idpres=? ";
            try (PreparedStatement pstm = dbConnect.prepareStatement(req)){
                pstm.setInt(1, id);
            //rs = stmt.executeQuery("select * from INFO_PRESCRIPTION WHERE IDPRES IN (SELECT idpres FROM PRESCRIPTION WHERE idpat=?)");
                try (ResultSet rs = pstm.executeQuery()){
                    while(rs.next()){
                        count=rs.getInt("COUNT");
                    }
                }
            }                        
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this,e,"Erreur",JOptionPane.INFORMATION_MESSAGE);
        }
        String scount=String.valueOf(count);
            txtCount.setText(scount);
    }//GEN-LAST:event_btRechActionPerformed

    private void btAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnnulerActionPerformed
        f.setContentPane(new menupres());
        f.repaint();
        f.revalidate();
    }//GEN-LAST:event_btAnnulerActionPerformed

    private void btValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValiderActionPerformed
        try{
            Connection dbConnect = DBConnection.getConnection();
            nommed=txtMed.getText();
            stmt = dbConnect.createStatement();
                rs = stmt.executeQuery("select * from medecin");
                while(rs.next()){
                    if(rs.getString("NOM").equals(nommed)){
                        idmed=rs.getInt("IDMED");
                    }
                }
            nompat=txtPat.getText();
            stmt = dbConnect.createStatement();
                rs = stmt.executeQuery("select * from patient");
                while(rs.next()){
                    if(rs.getString("NOM").equals(nompat)){
                        idpat=rs.getInt("IDPAT");
                    }
                }
            datepres=date();
            pres= new Prescription(id,datepres,idmed,idpat);
            pres=pdao.update(pres);
            //JOptionPane.showMessageDialog(this,"Modification effectuée avec succès","Succès",JOptionPane.INFORMATION_MESSAGE);
            f.setContentPane(new Modifinfos(id));
            f.repaint();
            f.revalidate();
        }catch (SQLException e) {
            JOptionPane.showMessageDialog(this,e,"Erreur",JOptionPane.INFORMATION_MESSAGE);
        }    
    }//GEN-LAST:event_btValiderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDRech;
    private javax.swing.JButton btAnnuler;
    private javax.swing.JButton btRech;
    private javax.swing.JButton btValider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel txtCount;
    private javax.swing.JLabel txtDate;
    private javax.swing.JTextField txtMed;
    private javax.swing.JTextField txtPat;
    // End of variables declaration//GEN-END:variables
}
